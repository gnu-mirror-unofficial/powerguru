// 
// Copyright (C) 2005, 2006-2018.
//      Free Software Foundation, Inc.
// 
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 3 of the License, or
// (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

#ifndef __TCPUTIL_H__
#define __TCPUTIL_H__

// This is generated by autoconf
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif

#include <sys/types.h>
#include <sys/socket.h>
#include <sys/param.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <netdb.h>
#include <cstring>
#include <vector>

#include "log.h"
#include "err.h"

class Tcputil {
public:
    Tcputil();
    ~Tcputil();
    
    // This gets the servent data that contains the port
    // number as specified by it's /etc/services file entry.
    //struct servent *lookupService(int number);
    struct servent *lookupService(const std::string &name) {
        return lookupService(name, "tcp");
    };
    struct servent *lookupService(const std::string &name,
                                  const std::string &protocol);
    int numberOfInterfaces(void);
    // Accessors
    short getPort(void) { return -1; }; // FIXME
    int getProtocol(void) { return _addrinfo->ai_protocol; };
    std::string &getHostname(void) { return _hostname; };
    std::string &getIP(void) { return _ipaddr; };
    
protected:
    std::string        _hostname;
    std::string        _ipaddr;
    struct servent     *_service;
    struct protoent    *_proto;
    struct addrinfo    *_addrinfo;
};

// EOF __TCPUTIL_H__
#endif

// local Variables:
// mode: C++
// indent-tabs-mode: nil
// End:
