// 
// Copyright (C) 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013
// 2014, 2015, 2016, 2017, 2018, 2019 Free Software Foundation, Inc.

// 
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 3 of the License, or
// (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

/// \file snmp.h Wrapper for net-snmp.
/// \copyright GNU Public License.

#ifndef __SNMP_H__
#define __SNMP_H__ 1

// This is generated by autoconf
#ifdef HAVE_CONFIG_H
# include "config.h"
#endif

#include <stdarg.h>
#include <stdio.h>
#include <netinet/in.h>
#include <sys/types.h>

/* If you have sys/time.h on your machine: */
#include <sys/time.h>

#include <boost/system/error_code.hpp>

/* if on windows: */
#ifdef WIN32
#include <winsock.h>
#endif

/* put a proper extern in front of certain functions */
#define NETSNMP_IMPORT extern

/* don't use inline constructs (define to <i>inline</i> if you want them) */
#undef NETSNMP_INLINE
#define NETSNMP_INLINE

/* run man signal and see what the user function is supposed to return
   to avoid warnings, or leave as "void" below if you don't care about
   any warnings you might be seeing */
#define RETSIGTYPE void

/* tell the Net-SNMP core functionality headers that we've done the
   minimal requirements */
#define NET_SNMP_CONFIG_H

//#undef SNMP_TRANSPORT_UDPIPV6_DOMAIN
//#undef SNMP_TRANSPORT_TCPIPV6_DOMAIN

// FIXME: including <net-snmp/net-snmp-includes.h> causes problems unless
// this is defined.
#ifndef NETSNMP_ATTRIBUTE_DEPRECATED
#define NETSNMP_ATTRIBUTE_DEPRECATED
#endif

/* include the core Net-SNMP functionality headers */
#include <net-snmp/net-snmp-config.h>
#include <net-snmp/types.h>
#include <net-snmp/net-snmp-includes.h>
#include <net-snmp/agent/net-snmp-agent-includes.h>
#include <net-snmp/agent/scalar.h>

#include <cstring>

class SnmpClient
{
public:
    SnmpClient();
    ~SnmpClient();
    boost::system::error_code open(std::string init, std::string mibname);
    boost::system::error_code close(void);
    struct snmp_pdu *read(std::string mibnode);
private:
    std::string           *_hostname;
#ifdef HAVE_SNMP
    struct snmp_session   _session;
    struct snmp_session   *_handle;
    struct tree           *_mibtree;
    struct snmp_pdu       *_pdu;
    struct snmp_pdu       *_response;
#endif
};


class SnmpDaemon
{
public:
    SnmpDaemon();
    ~SnmpDaemon();
    boost::system::error_code master(bool background);
    boost::system::error_code start(std::string init, std::string mibname);
    boost::system::error_code close(void);
    struct snmp_pdu *readSnmp(std::string mibnode);
    boost::system::error_code process(void);
  
private:
    std::string           *_hostname;
};

// end of __SNMP_H__
#endif

// local Variables:
// mode: C++
// indent-tabs-mode: nil
// End:
